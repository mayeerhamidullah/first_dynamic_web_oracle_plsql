/* TABLE CREATION WITH CHECK CONSTRAINT ON AADHAR*/

CREATE TABLE MEMBER_REGISTRATION(P_ID NUMBER PRIMARY KEY,USERNAME VARCHAR2(50),PASSWORD VARCHAR2(20),FATHERNAME VARCHAR2(50),GENDER VARCHAR(15),AADHAR VARCHAR2(12) CHECK (LENGTH(AADHAR)=12));

-------------------------------------------------------------------------------------------------------------------------------------------------------------

/* CREATION OF SEQUENCE AND TRIGGER TO GENERATE PERSON ID AUTOMATICALLY */

CREATE SEQUENCE S_AUTO_GENERATION;

CREATE OR REPLACE TRIGGER TG_PRIMARY_AUTO_GENERATION
BEFORE INSERT ON MEMBER_REGISTRATION
FOR EACH ROW
BEGIN
:NEW.P_ID:=S_AUTO_GENERATION.NEXTVAL;
END;
/

---------------------------------------------------------------------------------------------------------------------------------------------

/* PROCEDURE TO INSERT DATA */ 

CREATE OR REPLACE procedure p_insert(p_username varchar2,p_password varchar2,
p_father varchar2,p_gender varchar2,p_aadhar number) is
BEGIN
insert into MEMBER_REGISTRATION(username,password,fathername,gender,aadhar)values(p_username,p_password,p_father,p_gender,p_aadhar);
END;
/

----------------------------------------------------------------------------------------------------------------------------------------

/* PROCEDURE TO VIEW "PERSON ID"(which is automatically generated by using trigger and sequence) BY USING USERNAME */

CREATE OR REPLACE procedure p_application(p_name in varchar2,p_s_no out number)
  is
  begin
  execute immediate 'select P_ID from MEMBER_REGISTRATION where username=:p_name' into p_s_no using p_name;
  dbms_output.put_line(p_s_no);
end;

-------------------------------------------------------------------------------------------------------------------------------------

/* PROCEDURE TO VIEW PERSON DETAILS EXCEPT "PASSWORD" AND "AADHAR" BY USING "PERSON ID"  */

CREATE OR REPLACE procedure  p_retrieve_all_details(p_s_no in number,p_username out varchar2,p_fathername out varchar2,p_gender out varchar2)
  is
  begin
  execute immediate 'select username,fathername,gender from MEMBER_REGISTRATION where P_ID=:p_s_no' into p_username,p_fathername,p_gender using p_s_no;
  dbms_output.put_line(p_username ||' '|| p_fathername ||' '|| p_gender);
  end;

  --------------------------------------------------------------------------------------------------------------------------------------


/* ADMIN CAN VIEW ALL THE PERSONS DETAILS BY USING THIS FUNCTION OF SYS_REFCURSOR AS RETURN TYPE */
CREATE OR REPLACE FUNCTION F_ADMIN_LOGIN RETURN SYS_REFCURSOR
IS
V_T SYS_REFCURSOR;
BEGIN
OPEN V_T FOR SELECT * FROM MEMBER_REGISTRATION;
RETURN V_T;
END;
/


-----------------------------------------------------------------------------------------------------------------------------------------------
                      ORACLE                               /                      MYSQL
 -------------------------------------------------------------------------------------------------------------------------------------------- --            
1. NOT CASE SENSITIVE                                        /               CASE SENSITIVE 
2."USERNAME","PASSWORD" ENOUGH                               /        ONE EXTRA SECURITY ELEMENT "HOST" REQUIRED
3.SYS_REFCURSORS AVAILABLE                                   /             SYS_REFCURSORS NOT AVAILABLE
4.IN PROCEDURE,FUNCTION,TRIGGER CREATION WE ARE NOT USING    /       IN PROCEDURE,FUNCTION,TRIGGER CREATION WE ARE  USING
"DELIMITER".                                                 /       "DELIMITER".+
5.IN PROCEDURE,FUNCTION CREATION WE ARE  USING "IS" KEYWORD. /       IN PROCEDURE,FUNCTION CREATION WE ARE  NOT USING "IS" KEYWORD.
6.IN PROCEDURE,FUNCTION CREATION WE ARE  DECLARING VARIABLES /       IN PROCEDURE,FUNCTION CREATION WE ARE  DECLAREING VARIABLES
BEFORE THE BEGIN STATEMENT.                                  /       AFTER THE BEGIN STATEMENT.
7.BY USING "CURSORS" AND "+" OPERATOR IN PROCEDURE WE CAN    /       WE HAVE TO USE SUM(); FUNCTION ALONG WITH CURSORS TO CALCULTE THE TOTAL
CALCULTE THE TOTAL OF THE COLUMN VALUES.                     /       OF THE COLUMN VALUES.
8.IN PROCEDURE,FUNCTION CREATION PARAMETERS SIZE WE HAVE NOT /       IN PROCEDURE,FUNCTION CREATION WE HAVE TO SPECIFY SIZE OF 
TO SPECIFY THE SIZE OF THE PARAMETERS.                       /       THE PARAMETERS.
9.grant all privileges  to username;                         /        grant all on *.* to 'username'@'host' with grant option;
10.grant connect,resource to username;                                     /        flush privileges;
                                                             /        revoke all on *.* from 'username'@'host';
                                                             /        revoke all on mysql.* from 'username'@'host'
11.select text from user_source where name='OJECT_NAME';     /       show create object_type object_name;
12.CONCAT(); by using concat function we add only two        /     CONCAT_WS(); by using concat function we add multiple arguements and
arguements and double quotes not allowed.                    /     double quotes allowed.
13.HERE FIRST WE SPECIFY THE CURSOR_KEY BEFORE THE           /     HERE FIRST SPECIFY THE CURSOR_NAME BEFORE THE CURSOR_KEY WHILE CREATING THE
CURSOR_NAME WHILE CREATING THE CURSOR.                       /     CURSOR
--------------------------------------------------------------------------------------------------------------------------------------------------